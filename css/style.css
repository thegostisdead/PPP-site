body,
html {
    margin: 0;
    padding: 0;
}

header {
    display: flex;
    flex-direction: row;
}

header>h1 {
    font-family: "Nunito Sans", Arial, sans-serif;
}

header>nav {
    display: flex;
    align-items: center;
    margin-left: auto
}

header>nav>li {
    list-style: none;
    font-size: 1.5em;
    margin-left: 1em;
    margin-right: 1em;
    font-family: "Nunito Sans", Arial, sans-serif;
}

header>nav>li>a {
    text-decoration: none;
    color: black;
}

body>section {
    display: flex;
}

body>section h2 {
    font-size: 60px;
    font-weight: 900;
}

body>section img {
    margin-left: auto;
}

.wrapper {
    /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
    height: 100vh;
    /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
    overflow-x: hidden;
    /* Enable scrolling on the page. */
    overflow-y: auto;
    /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
    perspective: 2px;
}

.section {
    position: relative;
    height: 100vh;
    display: flex;
}

.parallax::after {
    /* Display and position the pseudo-element */
    content: " ";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
    transform: translateZ(-1px) scale(1.5);
    /* Force the background image to fill the whole element. */
    background-size: 100%;
    /* Keep the image from overlapping sibling elements. */
    z-index: -1;
}


/* The styling for the static div. */

.static {
    background-color: #6c63ff;
    color: white;
}

.first {
    display: flex;
}

.first img {
    margin-left: auto;
}


/* Sets the actual background images to adorable kitties. This part is crucial. */


/* Collaped card m√©tier */

* {
    box-sizing: border-box;
}

@import url(https://fonts.googleapis.com/css?family=Lato:400,700);
body {
    font-family: 'Lato';
}

.heading-primary {
    font-size: 2em;
    padding: 2em;
    text-align: center;
}

.accordion dl,
.accordion-list {
    border: 1px solid #ddd;
    &:after {
        content: "";
        display: block;
        height: 1em;
        width: 100%;
        background-color: darken(#38cc70, 10%);
    }
}

.accordion dd,
.accordion__panel {
    background-color: #eee;
    font-size: 1em;
    line-height: 1.5em;
}

.accordion p {
    padding: 1em 2em 1em 2em;
}

.accordion {
    position: relative;
    background-color: #eee;
}

.container {
    max-width: 960px;
    margin: 0 auto;
    padding: 2em 0 2em 0;
}

.accordionTitle,
.accordion__Heading {
    background-color: #38cc70;
    text-align: center;
    font-weight: 700;
    padding: 2em;
    display: block;
    text-decoration: none;
    color: #fff;
    transition: background-color 0.5s ease-in-out;
    border-bottom: 1px solid darken(#38cc70, 5%);
    &:before {
        content: "+";
        font-size: 1.5em;
        line-height: 0.5em;
        float: left;
        transition: transform 0.3s ease-in-out;
    }
    &:hover {
        background-color: darken(#38cc70, 10%);
    }
}

.accordionTitleActive,
.accordionTitle.is-expanded {
    background-color: darken(#38cc70, 10%);
    &:before {
        transform: rotate(-225deg);
    }
}

.accordionItem {
    height: auto;
    overflow: hidden;
    //SHAME: magic number to allow the accordion to animate
    max-height: 50em;
    transition: max-height 1s;
    @media screen and (min-width: 48em) {
        max-height: 15em;
        transition: max-height 0.5s
    }
}

.accordionItem.is-collapsed {
    max-height: 0;
}

.no-js .accordionItem.is-collapsed {
    max-height: auto;
}

.animateIn {
    animation: accordionIn 0.45s normal ease-in-out both 1;
}

.animateOut {
    animation: accordionOut 0.45s alternate ease-in-out both 1;
}

@keyframes accordionIn {
    0% {
        opacity: 0;
        transform: scale(0.9) rotateX(-60deg);
        transform-origin: 50% 0;
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes accordionOut {
    0% {
        opacity: 1;
        transform: scale(1);
    }
    100% {
        opacity: 0;
        transform: scale(0.9) rotateX(-60deg);
    }
}